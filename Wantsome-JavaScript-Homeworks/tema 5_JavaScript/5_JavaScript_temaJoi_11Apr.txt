
//Ex1
//Vreau sa am o functie care sa-mi calculeze suma dintre 2 numere daca ele sunt diferite iar daca sunt egale sa-mi imulteasca suma lor cu 5
//ex myFunction(10, 5) - outpot 15 // myFunction(10,10) - output 100


//   function myFunction(a,b){
//     if (a!=b){
//       return sum=a+b;
//      } else {
//         return (a+b)*5;
//     }
//   }

// console.log(myFunction(10,10));


//Ex2
//Vreau sa am o functie care sa returneze true daca ambele numere sunt egale cu 30 sau daca suma lor este egala cu 30
//ex testFunction(30, 30) - true 
//testFunction(15,15) - true
//testFunction(10, 15) - false

// function testFunction(a,b){
//   if((a===30 && b===30) || (a===b)){
//     return true;
//   } else  { 
//     return false;
//   }
// }
// console.log(testFunction(15,1));




//Ex3
//Vreau sa am o functie care sa verifice un string si daca stringul incepe cu 'JS' sa returneze acel string iar daca nu incepe sa-l adauge
//checkString('JSisAwsome') - JSisAwsome
//checkString('isEasy') - JSisEasy
//checkString(null) - JS

// function startsWith(str, word) {
//     if (str.lastIndexOf(word, 0) != 0){
//   return "JS" + word; 
// } else {  if(str===word){
//     return word;
//   }
//  }
// }
// console.log(startsWith("JS","isEasy"));



//Ex4
//Scrieti o functie care sa scoata literele/cifrele duplicate dintr-un string/numbar
//removeDuplicates('aabcdeef') - 'abcdef'
//removeDuplicates(122334) - 1234

// function removeDuplicates(str){
//   var dublura="";
//   for (var i=0;i<str.length;i++){
//     if(dublura.indexOf(str.charAt(i))==-1){
//        dublura+=str[i];
//       }
//   }
// return dublura;
// }
// console.log(removeDuplicates("1223334"));

//Ex5
// Gasiti cel mai lung string intr-o fraza
//findLongestString('Wantsome is Awsomeeee today') - output 'Awsomeeee'

// function findTheLongString(str) {
//   let text = str.split(" ");
//   let cuvantLung = text.reduce((a, b) => {
//     if(b.length > a.length) {
//       return b;
//     } else {
//       return a;
//     }
//   });
//   return longestWord;
// }
// console.log(findTheLongString("Wantsome is Awsomeeee today"));




//Ex6
//Scrieti o functie care sa aiba output-ul asta
// *  
// * *  
// * * *  
// * * * *  
// * * * * *  

// function output(){
//   for(var i=1;i<=5;i++){
//     var a="*";
//     console.log(a.repeat(i));
//   }
// }
// output();

 


//ex7
//   const negativeNumbers = [];

//   function extractNegativeNumbers(numbers) {
//       // append any negative numbers found in the numbers array 
//       // into the negativeNumbers array constant variable above
//   }
//   extractNegativeNumbers([1,2,-5,4,-6])


// const negativeNumbers = [];
// function extractNegativeNumbers(numbers) {
    
//     for (var i=0; i < numbers.length; i++) {
//         if (numbers[i] < 0) {
//             negativeNumbers.push(numbers[i]);
//         }
//     }
//     return negativeNumbers;
// }
// console.log(extractNegativeNumbers([1,2,-5,4,-6]));


//ex8
//Avem o functie cu 2 numere si un operator, vrem sa obtinem rezultatul in functie de operator - "add", "substract", "multiply", "divide"
//ex calculate(2, 5, "add") => 7
//calculate(10, 8, "substract") => 2

//???????????????????????????????????
// function displayNumByOperator(a,b,operator) {
//   var result; //
//   if (operator="add") {
//     return a+b;}
//   } else if (operator="substract") {
//     return a-b;
//   } else if (operator="multiply") {
//             return a*b;
//             } else if (operator="divide") {
//               return a%b;
//   } else (operator=" ") {
//     return 0;
//   }
// }
// console.log(displayNumByOperator(2,5,"add"));
  


//Ex9
// Vreau sa am o functie care sa verifice daca numarul dat este divizibl cu 3, 5 sau ambele si sa printeze "THREE", "FIVE", "BOTH" iar daca nu este cu niciunul sa returneze numarul
// isDiv(15) => "BOTH"
// isDiv(9)=> "THREE"
// isDiv(7)=> 7

// function isDiv (nr) {
//   var nr;
//   if (nr%5===0 && nr%3===0) {
//   return "BOTH";
// } else if (nr%5===0){
//   return "FIVE";
// } else if (nr%3===0) { 
//   return "THREE";
// } else {
//   return nr;
// }
// }
// console.log(isDiv(13));

//Master exercises
//Ex9 
// Vreau sa pot afisa data si ziua sub urmatorul format:
// Azi este : Luni. 
// Ora este : 20 PM : 30 : 38


// function currentDateAndTime(date) {
//   var today=new Date();
//   var day=today.getDay();
//   var TodayIs=["Luni","Marti","Miercuri","Joi","Vineri","Sambata","Duminica"];
//   console.log("Azi este: " + TodayIs[day]);}
//     currentDateAndTime();
//         var hour=today.getHours(); //pentru zi imi afiseaza dar pentru ora momentan nu reusesc sa o unesc....
//         var minute=today.getMinutes();
//         var second=today.getSeconds();
//         var oraEste=[1:2:3];
//         console.log("Ora este:" + hour + ":" + minute + ":" + second);}
     



//ex10
// ATM-urile iti dau voie sa folosesti pin-uri din 4 sau 6 cifre. Faceti o functie care sa returneze true daca pin-ul e corect si false daca e gresit
// validPin("1234") => true
// validPin("12345") => false
// validPin("z23f") => false

// The [^0-9]+$ expression is used to find any character that is NOT a digit.
// The digits inside the brackets can be any numbers or span of numbers from 0 to 9.
// Tip: Use the [0-9] expression to find any character between the brackets that is a digit.



// function validatePIN (pin) {
//   let regexPIN4 = /^\d{4}$/;
//   let regexPIN6 = /^\d{6}$/;
//   if (regexPIN4.test(pin)|regexPIN6.test(pin)){
//       return "True";
// } else {
//   return "False";
// }
// }
//   console.log(validatePIN(12345));


//ex11 
//Folosind regex vreau sa scot toate vocalele dintr-un string
// removeVowels("Hey I am developer") => "Hy m dvlpr"

function removeVowels(text) {
  var vocala = {
    'a': true,
    'e': true,
    'i': true,
    'o': true,
    'u': true
  }
  var result = "";
  for (var i = 0; i < text.length; i++) {
    var letter = text[i].toLowerCase();
    if (!vocala[letter]) {
      result += text[i];
    }
  }
  return result;
}
console.log(removeVowels("Hey I am developer"));


//ex12
//Vreau sa am o functie care sa verifice daca un numar este patrat
// isSquareNumber(-1) => false
// isSquareNumber(25) => true
// isSquareNumber(3) => false

  //The Math.sqrt() function returns the square root of a number

//  function isSquareNumber(nr){
//   if(Math.sqrt(nr) % 1 ===0){
//     return true
//   } else {
//     return false;
//   }
// }
// console.log(isSquareNumber(25));


//ex13
// Vreau sa am o functie care sa verifice daca un cuvant este o anagrama- daca toate literele din primul string se regasesc in al doilea
// isAnagram("School master", "The class room") => true
// isAnagram("silent", "listen") => true


// function isAnagram(str1, str2) {
//     const text = function (str) {
//         return str.toLowerCase().replace(/[^a-z\d]/g, '').split('').sort().join('');
//     }
//     return text(str1) == text(str2)
// }
// console.log(isAnagram("silent", "listen"));